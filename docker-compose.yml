services:
  nginx:
    image: nginx:alpine
    ports:
      - "0.0.0.0:8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      web:
        condition: service_healthy
      orbitdb:
        condition: service_healthy
    networks:
      - rbm-network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_ORBITDB_URL: ${NEXT_PUBLIC_ORBITDB_URL:-http://localhost:4001}
        NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:9091}
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL:-file:/data/sqlite.db}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - ORBITDB_SERVICE_URL=http://orbitdb:4001
      - NEXT_PUBLIC_ORBITDB_URL=${NEXT_PUBLIC_ORBITDB_URL:-http://localhost:4001}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:9091}
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - web-data:/data
      - uploads:/uploads
    depends_on:
      orbitdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - rbm-network

  orbitdb:
    build:
      context: ./orbitdb-service
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:4001:4001"
      - "0.0.0.0:9091:9091"
    environment:
      - PORT=${ORBITDB_PORT:-4001}
      - WS_PORT=${ORBITDB_WS_PORT:-9091}
      - ORBITDB_DATA_DIR=${ORBITDB_DATA_DIR:-/app/data}
      - HOST=0.0.0.0
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - orbitdb-data:/app/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://0.0.0.0:4001/health | grep -q '\"ok\":true'"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - rbm-network

volumes:
  web-data:
    driver: local
  uploads:
    driver: local
  orbitdb-data:
    driver: local

networks:
  rbm-network:
    driver: bridge